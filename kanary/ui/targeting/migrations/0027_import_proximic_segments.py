# -*- coding: utf-8 -*-
from south.utils import datetime_utils as datetime
from south.db import db
from south.v2 import DataMigration
from django.db import models

PAGE_QUALITY = (
    (502697, 'Low'),
    (502696, 'Medium'),
    (502695, 'High'),
)

PAGE_NOTICEABILITY = (
    (502705, 'Low', '160x600'),
    (502708, 'Low', '300x250'),
    (502712, 'Low', '468x60'),
    (502700, 'Low', '728x90'),

    (502703, 'Medium', '160x600'),
    (502707, 'Medium', '300x250'),
    (502710, 'Medium', '468x60'),
    (502699, 'Medium', '728x90'),

    (502701, 'High', '160x600'),
    (502706, 'High', '300x250'),
    (502709, 'High', '468x60'),
    (502698, 'High', '728x90'),
)

PAGE_PLACEMENT = (
    (502719, 'Low', '160x600'),
    (502717, 'Medium', '160x600'),
    (502716, 'High', '160x600'),

    (502723, 'Low', '300x250'),
    (502721, 'Medium', '300x250'),
    (502720, 'High', '300x250'),

    (502726, 'Low', '468x60'),
    (502725, 'Medium', '468x60'),
    (502724, 'High', '468x60'),

    (502715, 'Low', '728x90'),
    (502714, 'Medium', '728x90'),
    (502713, 'High', '728x90'),
)

LANGUAGES = (
    (237332, 'English'),
    (237504, 'French'),
    (237505, 'Spanish'),
    (237506, 'Italian'),
    (237507, 'Dutch'),
    (237508, 'Russian'),
    (237509, 'Portuguese'),
    (237510, 'Polish'),
    (237511, 'German'),
    (782938, 'Danish'),
    (782951, 'Finnish'),
    (782959, 'Swedish'),
    (782978, 'Norwegian'),
)

CONTEXTUAL = (
    (94425, 'Arts & Entertainment'),
    (94426, 'Arts & Entertainment', 'Books & Literature'),
    (94427, 'Arts & Entertainment', 'Celebrity Fan/Gossip'),
    (94428, 'Arts & Entertainment', 'Fine Art'),
    (94429, 'Arts & Entertainment', 'Humor'),
    (94430, 'Arts & Entertainment', 'Movies'),
    (94431, 'Arts & Entertainment', 'Music'),
    (94432, 'Arts & Entertainment', 'Television'),
    (94433, 'Automotive'),
    (94434, 'Automotive', '4-Wheel Drive/SUVs'),
    (94435, 'Automotive', 'Auto Parts'),
    (94436, 'Automotive', 'Auto Repair'),
    (94437, 'Automotive', 'Buying/Selling Cars'),
    (94438, 'Automotive', 'Car Culture'),
    (94439, 'Automotive', 'Certified Pre-Owned'),
    (94440, 'Automotive', 'Convertible'),
    (94441, 'Automotive', 'Coupe'),
    (94442, 'Automotive', 'Crossover'),
    (94443, 'Automotive', 'Diesel'),
    (94444, 'Automotive', 'Electric Vehicles'),
    (94445, 'Automotive', 'Hatchback'),
    (94446, 'Automotive', 'Hybrid'),
    (94447, 'Automotive', 'Luxury'),
    (94448, 'Automotive', 'MiniVan'),
    (94449, 'Automotive', 'Motorcycles'),
    (94450, 'Automotive', 'Off-Road Vehicles'),
    (94451, 'Automotive', 'Performance Vehicles'),
    (94452, 'Automotive', 'Pickup'),
    (94453, 'Automotive', 'Road-Side Assistance'),
    (94454, 'Automotive', 'Sedan'),
    (94455, 'Automotive', 'Trucks & Accessories'),
    (94456, 'Automotive', 'Vintage Cars'),
    (94457, 'Automotive', 'Wagon'),
    (94458, 'Business'),
    (94459, 'Business', 'Advertising'),
    (94460, 'Business', 'Agriculture'),
    (94461, 'Business', 'Biotech/Biomedical'),
    (94462, 'Business', 'Business Software'),
    (94463, 'Business', 'Construction'),
    (94464, 'Business', 'E-Commerce'),
    (94465, 'Business', 'Entrepreneurs'),
    (94466, 'Business', 'Financial Services'),
    (94467, 'Business', 'Forestry'),
    (94468, 'Business', 'Government'),
    (94469, 'Business', 'Graphic Design'),
    (94470, 'Business', 'Green Solutions'),
    (94471, 'Business', 'Human Resources'),
    (94472, 'Business', 'Logistics'),
    (94473, 'Business', 'Management'),
    (94474, 'Business', 'Marketing'),
    (94475, 'Business', 'Metals'),
    (94476, 'Business', 'Non-Profit Organizations'),
    (94477, 'Business', 'Power Industry'),
    (94478, 'Business', 'Public Services'),
    (94479, 'Business', 'Purchasing'),
    (94480, 'Business', 'Retail Industry'),
    (94481, 'Business', 'SOHO'),
    (94482, 'Business', 'Telecom'),
    (94495, 'Education'),
    (94496, 'Education', '7-12 Educators'),
    (94497, 'Education', 'Adult Education'),
    (94498, 'Education', 'Art History'),
    (94499, 'Education', 'College Admissions'),
    (94500, 'Education', 'College Life'),
    (94501, 'Education', 'Distance Learning'),
    (94502, 'Education', 'English as a 2nd Language'),
    (94503, 'Education', 'Graduate School'),
    (94504, 'Education', 'Homeschooling'),
    (94505, 'Education', 'Homework/Study Tips'),
    (94506, 'Education', 'K-6 Educators'),
    (94507, 'Education', 'Language Learning'),
    (94508, 'Education', 'Private School'),
    (94509, 'Education', 'Special Education'),
    (94510, 'Education', 'Studying Business'),
    (94511, 'Family & Parenting'),
    (94512, 'Family & Parenting', 'Adoption'),
    (94513, 'Family & Parenting', 'Babies & Toddlers'),
    (94514, 'Family & Parenting', 'Daycare/Pre-School'),
    (94515, 'Family & Parenting', 'Eldercare'),
    (94516, 'Family & Parenting', 'Family Internet'),
    (94517, 'Family & Parenting', 'Parenting - K-6 Kids'),
    (94518, 'Family & Parenting', 'Parenting Teens'),
    (94519, 'Family & Parenting', 'Pregnancy'),
    (94520, 'Family & Parenting', 'Special Needs Kids'),
    (94521, 'Food & Drink'),
    (94522, 'Food & Drink', 'American Cusine'),
    (94523, 'Food & Drink', 'Barbecues & Grilling'),
    (94524, 'Food & Drink', 'Cajun/Creole'),
    (94525, 'Food & Drink', 'Chinese Cuisine'),
    (94526, 'Food & Drink', 'Cocktails/Beer'),
    (94527, 'Food & Drink', 'Coffee/Tea'),
    (94528, 'Food & Drink', 'Cuisine-specific'),
    (94529, 'Food & Drink', 'Desserts & Baking'),
    (94530, 'Food & Drink', 'Dining Out'),
    (94531, 'Food & Drink', 'Food Allergies'),
    (94532, 'Food & Drink', 'Food Issues'),
    (94533, 'Food & Drink', 'French Cuisine'),
    (94534, 'Food & Drink', 'Health/LowFat Cooking'),
    (94535, 'Food & Drink', 'Italian Cuisine'),
    (94536, 'Food & Drink', 'Japanese Cuisine'),
    (94537, 'Food & Drink', 'Mexican Cuisine'),
    (94538, 'Food & Drink', 'Vegan'),
    (94539, 'Food & Drink', 'Vegetarian'),
    (94540, 'Food & Drink', 'Wine'),
    (94541, 'Health & Fitness'),
    (94542, 'Health & Fitness', 'A.D.D.'),
    (94543, 'Health & Fitness', 'AIDS/HIV'),
    (94544, 'Health & Fitness', 'Allergies'),
    (94545, 'Health & Fitness', 'Alternative Medicine'),
    (94546, 'Health & Fitness', 'Arthritis'),
    (94547, 'Health & Fitness', 'Asthma'),
    (94548, 'Health & Fitness', 'Autism/PDD'),
    (94549, 'Health & Fitness', 'Bipolar Disorder'),
    (94550, 'Health & Fitness', 'Brain Tumor'),
    (94551, 'Health & Fitness', 'Cancer'),
    (94552, 'Health & Fitness', 'Cholesterol'),
    (94553, 'Health & Fitness', 'Chronic Fatigue Syndrome'),
    (94554, 'Health & Fitness', 'Chronic Pain'),
    (94555, 'Health & Fitness', 'Cold & Flu'),
    (94556, 'Health & Fitness', 'Deafness'),
    (94557, 'Health & Fitness', 'Dental Care'),
    (94558, 'Health & Fitness', 'Depression'),
    (94559, 'Health & Fitness', 'Dermatology'),
    (94560, 'Health & Fitness', 'Diabetes'),
    (94561, 'Health & Fitness', 'Epilepsy'),
    (94562, 'Health & Fitness', 'Exercise'),
    (94563, 'Health & Fitness', 'GERD/Acid Reflux'),
    (94564, 'Health & Fitness', 'Headaches/Migraines'),
    (94565, 'Health & Fitness', 'Heart Disease'),
    (94566, 'Health & Fitness', 'Herbs for Health'),
    (94567, 'Health & Fitness', 'Holistic Healing'),
    (94568, 'Health & Fitness', 'IBS/Crohn\'s Disease'),
    (94569, 'Health & Fitness', 'Incest/Abuse Support'),
    (94570, 'Health & Fitness', 'Incontinence'),
    (94571, 'Health & Fitness', 'Infertility'),
    (94572, 'Health & Fitness', 'Men\'s Health'),
    (94573, 'Health & Fitness', 'Nutrition'),
    (94574, 'Health & Fitness', 'Orthopedics'),
    (94575, 'Health & Fitness', 'Panic/Anxiety Disorders'),
    (94576, 'Health & Fitness', 'Pediatrics'),
    (94577, 'Health & Fitness', 'Physical Therapy'),
    (94578, 'Health & Fitness', 'Psychology/Psychiatry'),
    (94579, 'Health & Fitness', 'Senior Health'),
    (94580, 'Health & Fitness', 'Sexuality'),
    (94581, 'Health & Fitness', 'Sleep Disorders'),
    (94582, 'Health & Fitness', 'Smoking Cessation'),
    (94583, 'Health & Fitness', 'Substance Abuse'),
    (94584, 'Health & Fitness', 'Thyroid Disease'),
    (94585, 'Health & Fitness', 'Weight Loss'),
    (94586, 'Health & Fitness', 'Women\'s Health'),

    (94587, 'Hobbies & Interests'),
    (94588, 'Hobbies & Interests', 'Art/Technology'),
    (94589, 'Hobbies & Interests', 'Arts & Crafts'),
    (94590, 'Hobbies & Interests', 'Beadwork'),
    (94591, 'Hobbies & Interests', 'Birdwatching'),
    (94592, 'Hobbies & Interests', 'BoardGames/Puzzles'),
    (94593, 'Hobbies & Interests', 'Candle & Soap Making'),
    (94594, 'Hobbies & Interests', 'Card Games'),
    (94595, 'Hobbies & Interests', 'Chess'),
    (94596, 'Hobbies & Interests', 'Cigars'),
    (94597, 'Hobbies & Interests', 'Collecting'),
    (94598, 'Hobbies & Interests', 'Comic Books'),
    (94599, 'Hobbies & Interests', 'Drawing/Sketching'),
    (94600, 'Hobbies & Interests', 'Freelance Writing'),
    (94601, 'Hobbies & Interests', 'Genealogy'),
    (94602, 'Hobbies & Interests', 'Getting Published'),
    (94603, 'Hobbies & Interests', 'Guitar'),
    (94604, 'Hobbies & Interests', 'Home Recording'),
    (94605, 'Hobbies & Interests', 'Inventors & Patents'),
    (94606, 'Hobbies & Interests', 'Jewelry Making'),
    (94607, 'Hobbies & Interests', 'Magic & Illusion'),
    (94608, 'Hobbies & Interests', 'Needlework'),
    (94609, 'Hobbies & Interests', 'Painting'),
    (94610, 'Hobbies & Interests', 'Photography'),
    (94611, 'Hobbies & Interests', 'Radio'),
    (94612, 'Hobbies & Interests', 'Roleplaying Games'),
    (94613, 'Hobbies & Interests', 'Sci-Fi & Fantasy'),
    (94614, 'Hobbies & Interests', 'Scrapbooking'),
    (94615, 'Hobbies & Interests', 'Screenwriting'),
    (94616, 'Hobbies & Interests', 'Stamps & Coins'),
    (94617, 'Hobbies & Interests', 'Video & Computer Games'),
    (94618, 'Hobbies & Interests', 'Woodworking'),
    (94619, 'Home & Garden'),
    (94620, 'Home & Garden', 'Appliances'),
    (94621, 'Home & Garden', 'Entertaining'),
    (94622, 'Home & Garden', 'Environmental Safety'),
    (94623, 'Home & Garden', 'Gardening'),
    (94624, 'Home & Garden', 'Home Repair'),
    (94625, 'Home & Garden', 'Home Theater'),
    (94626, 'Home & Garden', 'Interior Decorating'),
    (94627, 'Home & Garden', 'Landscaping'),
    (94628, 'Home & Garden', 'Remodeling & Construction'),
    (94629, 'Law, Gov\'t & Politics'),
    (94630, 'Law, Gov\'t & Politics', 'Commentary'),
    (94631, 'Law, Gov\'t & Politics', 'Immigration'),
    (94632, 'Law, Gov\'t & Politics', 'Legal Issues'),
    (94633, 'Law, Gov\'t & Politics', 'Politics'),
    (94634, 'Law, Gov\'t & Politics', 'U.S. Government Resources'),
    (94635, 'News'),
    (94636, 'News', 'International News'),
    (94637, 'News', 'Local News'),
    (94638, 'News', 'National News'),
    (94639, 'Personal Finance'),
    (94640, 'Personal Finance', 'Beginning Investing'),
    (94641, 'Personal Finance', 'Credit/Debt & Loans'),
    (94642, 'Personal Finance', 'Financial News'),
    (94643, 'Personal Finance', 'Financial Planning'),
    (94644, 'Personal Finance', 'Frugal Living'),
    (94645, 'Personal Finance', 'Hedge Fund'),
    (94646, 'Personal Finance', 'Insurance'),
    (94647, 'Personal Finance', 'Investing'),
    (94648, 'Personal Finance', 'Mutual Funds'),
    (94649, 'Personal Finance', 'Options'),
    (94650, 'Personal Finance', 'Retirement Planning'),
    (94651, 'Personal Finance', 'Stocks'),
    (94652, 'Personal Finance', 'Tax Planning'),
    (94653, 'Pets'),
    (94654, 'Pets', 'Aquariums'),
    (94655, 'Pets', 'Birds'),
    (94656, 'Pets', 'Cats'),
    (94657, 'Pets', 'Dogs'),
    (94658, 'Pets', 'Large Animals'),
    (94659, 'Pets', 'Reptiles'),
    (94660, 'Pets', 'Veterinary Medicine'),
    (94661, 'Real Estate'),
    (94662, 'Real Estate', 'Apartments'),
    (94663, 'Real Estate', 'Architects'),
    (94664, 'Real Estate', 'Buying/Selling Homes'),
    (94665, 'Religion and Spirituality'),
    (94666, 'Religion and Spirituality', 'Alternative Religions'),
    (94667, 'Religion and Spirituality', 'Atheism/Agnosticism'),
    (94668, 'Religion and Spirituality', 'Buddhism'),
    (94669, 'Religion and Spirituality', 'Catholicism'),
    (94670, 'Religion and Spirituality', 'Christianity'),
    (94671, 'Religion and Spirituality', 'Hinduism'),
    (94672, 'Religion and Spirituality', 'Islam'),
    (94673, 'Religion and Spirituality', 'Judaism'),
    (94674, 'Religion and Spirituality', 'Latter-Day Saints'),
    (94675, 'Religion and Spirituality', 'Pagan/Wiccan'),
    (94676, 'Science'),
    (94677, 'Science', 'Astrology'),
    (94678, 'Science', 'Biology'),
    (94679, 'Science', 'Botany'),
    (94680, 'Science', 'Chemistry'),
    (94681, 'Science', 'Geography'),
    (94682, 'Science', 'Geology'),
    (94683, 'Science', 'Paranormal Phenomena'),
    (94684, 'Science', 'Physics'),
    (94685, 'Science', 'Space/Astronomy'),
    (94686, 'Science', 'Weather'),
    (94687, 'Shopping'),
    (94688, 'Shopping', 'Comparison Engines'),
    (94689, 'Shopping', 'Contests & Freebies'),
    (94690, 'Shopping', 'Couponing'),
    (94691, 'Society'),
    (94692, 'Society', 'Dating'),
    (94693, 'Society', 'Divorce Support'),
    (94694, 'Society', 'Ethnic-specific'),
    (94695, 'Society', 'Gay Life'),
    (94696, 'Society', 'Marriage'),
    (94697, 'Society', 'Senior Living'),
    (94698, 'Society', 'Teens'),
    (94699, 'Society', 'Weddings'),
    (94700, 'Sports'),
    (94701, 'Sports', 'Auto Racing'),
    (94702, 'Sports', 'Baseball'),
    (94703, 'Sports', 'Bicycling'),
    (94704, 'Sports', 'Bodybuilding'),
    (94705, 'Sports', 'Boxing'),
    (94706, 'Sports', 'Canoeing/Kayaking'),
    (94707, 'Sports', 'Cheerleading'),
    (94708, 'Sports', 'Climbing'),
    (94709, 'Sports', 'Cricket'),
    (94710, 'Sports', 'Figure Skating'),
    (94711, 'Sports', 'Fly Fishing'),
    (94712, 'Sports', 'Football'),
    (94713, 'Sports', 'Freshwater Fishing'),
    (94714, 'Sports', 'Game & Fish'),
    (94715, 'Sports', 'Golf'),
    (94716, 'Sports', 'Horse Racing'),
    (94717, 'Sports', 'Horses'),
    (94718, 'Sports', 'Hunting/Shooting'),
    (94719, 'Sports', 'Inline Skating'),
    (94720, 'Sports', 'Martial Arts'),
    (94721, 'Sports', 'Mountain Biking'),
    (94722, 'Sports', 'NASCAR Racing'),
    (94723, 'Sports', 'Olympics'),
    (94724, 'Sports', 'Paintball'),
    (94725, 'Sports', 'Power & Motoryachts'),
    (94726, 'Sports', 'Pro Basketball'),
    (94727, 'Sports', 'Pro Ice Hockey'),
    (94728, 'Sports', 'Rodeo'),
    (94729, 'Sports', 'Rugby'),
    (94730, 'Sports', 'Running/Jogging'),
    (94731, 'Sports', 'Sailing'),
    (94732, 'Sports', 'Saltwater Fishing'),
    (94733, 'Sports', 'Scuba Diving'),
    (94734, 'Sports', 'Skateboarding'),
    (94735, 'Sports', 'Skiing'),
    (94736, 'Sports', 'Snowboarding'),
    (94737, 'Sports', 'Surfing/Bodyboarding'),
    (94738, 'Sports', 'Swimming'),
    (94739, 'Sports', 'Table Tennis/Ping-Pong'),
    (94740, 'Sports', 'Tennis'),
    (94741, 'Sports', 'Volleyball'),
    (94742, 'Sports', 'Walking'),
    (94743, 'Sports', 'Waterski/Wakeboard'),
    (94744, 'Sports', 'World Soccer'),
    (94745, 'Style & Fashion'),
    (94746, 'Style & Fashion', 'Accessories'),
    (94747, 'Style & Fashion', 'Beauty'),
    (94748, 'Style & Fashion', 'Body Art'),
    (94749, 'Style & Fashion', 'Clothing'),
    (94750, 'Style & Fashion', 'Fashion'),
    (94751, 'Style & Fashion', 'Jewelry'),
    (94752, 'Technology & Computing'),
    (94753, 'Technology & Computing', '3-D Graphics'),
    (94754, 'Technology & Computing', 'Animation'),
    (94755, 'Technology & Computing', 'Antivirus Software'),
    (94756, 'Technology & Computing', 'C/C++'),
    (94757, 'Technology & Computing', 'Cameras & Camcorders'),
    (94758, 'Technology & Computing', 'Cell Phones'),
    (94759, 'Technology & Computing', 'Computer Certification'),
    (94760, 'Technology & Computing', 'Computer Networking'),
    (94761, 'Technology & Computing', 'Computer Peripherals'),
    (94762, 'Technology & Computing', 'Computer Reviews'),
    (94763, 'Technology & Computing', 'Data Centers'),
    (94764, 'Technology & Computing', 'Databases'),
    (94765, 'Technology & Computing', 'Desktop Publishing'),
    (94766, 'Technology & Computing', 'Desktop Video'),
    (94767, 'Technology & Computing', 'Email'),
    (94768, 'Technology & Computing', 'Graphics Software'),
    (94769, 'Technology & Computing', 'Home Video/DVD'),
    (94770, 'Technology & Computing', 'Internet Technology'),
    (94771, 'Technology & Computing', 'Java'),
    (94772, 'Technology & Computing', 'JavaScript'),
    (94773, 'Technology & Computing', 'Linux'),
    (94774, 'Technology & Computing', 'Mac OS'),
    (94775, 'Technology & Computing', 'Mac Support'),
    (94776, 'Technology & Computing', 'MP3/MIDI'),
    (94777, 'Technology & Computing', 'Net Conferencing'),
    (94778, 'Technology & Computing', 'Net for Beginners'),
    (94779, 'Technology & Computing', 'Network Security'),
    (94780, 'Technology & Computing', 'Palmtops/PDAs'),
    (94781, 'Technology & Computing', 'PC Support'),
    (94782, 'Technology & Computing', 'Portable Entertainment'),
    (94783, 'Technology & Computing', 'Shareware/Freeware'),
    (94784, 'Technology & Computing', 'Unix'),
    (94785, 'Technology & Computing', 'Visual Basic'),
    (94786, 'Technology & Computing', 'Web Clip Art'),
    (94787, 'Technology & Computing', 'Web Design/HTML'),
    (94788, 'Technology & Computing', 'Web Search'),
    (94789, 'Technology & Computing', 'Windows'),
    (94790, 'Travel'),
    (94791, 'Travel', 'Adventure Travel'),
    (94792, 'Travel', 'Africa'),
    (94793, 'Travel', 'Air Travel'),
    (94794, 'Travel', 'Asia'),
    (94795, 'Travel', 'Australia & New Zealand'),
    (94796, 'Travel', 'Bed & Breakfasts'),
    (94797, 'Travel', 'Budget Travel'),
    (94798, 'Travel', 'Business Travel'),
    (94799, 'Travel', 'By US Locale'),
    (94800, 'Travel', 'Camping'),
    (94801, 'Travel', 'Canada'),
    (94802, 'Travel', 'Caribbean'),
    (94803, 'Travel', 'Cruises'),
    (94804, 'Travel', 'Eastern Europe'),
    (94805, 'Travel', 'Europe'),
    (94806, 'Travel', 'France'),
    (94807, 'Travel', 'Greece'),
    (94808, 'Travel', 'Honeymoons/Getaways'),
    (94809, 'Travel', 'Hotels'),
    (94810, 'Travel', 'Italy'),
    (94811, 'Travel', 'Japan'),
    (94812, 'Travel', 'Mexico & Central America'),
    (94813, 'Travel', 'National Parks'),
    (94814, 'Travel', 'South America'),
    (94815, 'Travel', 'Spas'),
    (94816, 'Travel', 'Theme Parks'),
    (94817, 'Travel', 'Traveling with Kids'),
    (94818, 'Travel', 'United Kingdom'),
)


class Migration(DataMigration):

    def import_categories(self, categories, model):
        for node_info in categories:
            appnexus_id, elements = node_info[0], node_info[1:]

            print "Imports category: {0}".format(' > '.join(elements))

            if len(elements) == 1:
                parent = None
            else:
                parent = model.objects.get_or_create(name=elements[-2])[0]

            model.objects.get_or_create(appnexus_id=appnexus_id,
                                        name=elements[-1],
                                        parent=parent)

    def delete_categories(self, categories, model):
        ids = map(lambda x: x[0], categories)
        model.objects.filter(pk__in=ids).delete()

    def forwards(self, orm):
        "Write your forwards methods here."
        self.import_categories(
            PAGE_QUALITY, orm['targeting.SegmentProximicPageQuality'])
        self.import_categories(
            PAGE_NOTICEABILITY, orm['targeting.SegmentProximicPageNoticeability'])
        self.import_categories(
            PAGE_PLACEMENT, orm['targeting.SegmentProximicPagePlacement'])
        self.import_categories(
            LANGUAGES, orm['targeting.SegmentProximicPageLanguage'])
        self.import_categories(
            CONTEXTUAL, orm['targeting.SegmentProximicContextual'])

    def backwards(self, orm):
        "Write your backwards methods here."
        self.delete_categories(
            PAGE_QUALITY, orm['targeting.SegmentProximicPageQuality'])
        self.delete_categories(
            PAGE_NOTICEABILITY, orm['targeting.SegmentProximicPageNoticeability'])
        self.delete_categories(
            PAGE_PLACEMENT, orm['targeting.SegmentProximicPagePlacement'])
        self.delete_categories(
            LANGUAGES, orm['targeting.SegmentProximicPageLanguage'])
        self.delete_categories(
            CONTEXTUAL, orm['targeting.SegmentProximicContextual'])

    models = {
        'targeting.appnexusbrand': {
            'Meta': {'object_name': 'AppNexusBrand'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'}),
            'num_creatives': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'urls': ('django.db.models.fields.TextField', [], {'null': 'True'})
        },
        'targeting.appnexusbrowser': {
            'Meta': {'object_name': 'AppNexusBrowser'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'}),
            'platform_type': ('django.db.models.fields.CharField', [], {'max_length': '6'})
        },
        'targeting.appnexuscarrier': {
            'Meta': {'object_name': 'AppNexusCarrier'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            'country_code': ('django.db.models.fields.CharField', [], {'max_length': '5', 'blank': 'True'}),
            'country_name': ('django.db.models.fields.CharField', [], {'max_length': '30', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        'targeting.appnexuscontentcategory': {
            'Meta': {'object_name': 'AppNexusContentCategory'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            'description': ('django.db.models.fields.TextField', [], {'null': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'is_system': ('django.db.models.fields.BooleanField', [], {'default': 'False'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'level': ('django.db.models.fields.PositiveIntegerField', [], {'db_index': 'True'}),
            'lft': ('django.db.models.fields.PositiveIntegerField', [], {'db_index': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': "orm['targeting.AppNexusContentCategory']"}),
            'rght': ('django.db.models.fields.PositiveIntegerField', [], {'db_index': 'True'}),
            'tree_id': ('django.db.models.fields.PositiveIntegerField', [], {'db_index': 'True'})
        },
        'targeting.appnexusdevicemake': {
            'Meta': {'object_name': 'AppNexusDeviceMake'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        'targeting.appnexusdevicemodel': {
            'Meta': {'unique_together': "(('name', 'make_appnexus_id'),)", 'object_name': 'AppNexusDeviceModel'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            'device_type': ('django.db.models.fields.CharField', [], {'max_length': '6', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'make_appnexus_id': ('django.db.models.fields.PositiveIntegerField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'}),
            'screen_height': ('django.db.models.fields.PositiveSmallIntegerField', [], {'null': 'True'}),
            'screen_width': ('django.db.models.fields.PositiveSmallIntegerField', [], {'null': 'True'})
        },
        'targeting.appnexusinventoryattr': {
            'Meta': {'object_name': 'AppNexusInventoryAttr'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        'targeting.appnexuslanguage': {
            'Meta': {'object_name': 'AppNexusLanguage'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        'targeting.appnexusos': {
            'Meta': {'object_name': 'AppNexusOS'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'}),
            'platform_type': ('django.db.models.fields.CharField', [], {'max_length': '6'})
        },
        'targeting.appnexussegment': {
            'Meta': {'object_name': 'AppNexusSegment'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        'targeting.appnexustechnicalattr': {
            'Meta': {'object_name': 'AppNexusTechnicalAttr'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'unique': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'last_modified': ('django.db.models.fields.DateTimeField', [], {'null': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '511'})
        },
        u'targeting.contentcategory': {
            'Meta': {'ordering': "('id',)", 'unique_together': "[('name', 'parent')]", 'object_name': 'ContentCategory'},
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.ContentCategory']"})
        },
        u'targeting.contentcategoryvalue': {
            'Meta': {'ordering': "('id',)", 'unique_together': "[('name', 'exchange', 'representant')]", 'object_name': 'ContentCategoryValue'},
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'exchange': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['targeting.Exchange']", 'null': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'representant': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'represented'", 'null': 'True', 'on_delete': 'models.SET_NULL', 'to': u"orm['targeting.ContentCategory']"})
        },
        u'targeting.exchange': {
            'Meta': {'object_name': 'Exchange'},
            'code': ('django.db.models.fields.CharField', [], {'max_length': '20', 'db_index': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '160'})
        },
        u'targeting.publishertargetvalue': {
            'Meta': {'ordering': "('id',)", 'object_name': 'PublisherTargetValue', '_ormbases': [u'targeting.TargetValue']},
            '_positions': ('django.db.models.fields.TextField', [], {'null': 'True'}),
            '_sizes': ('django.db.models.fields.TextField', [], {'null': 'True'}),
            'segments': ('django.db.models.fields.related.ManyToManyField', [], {'to': "orm['targeting.AppNexusSegment']", 'symmetrical': 'False'}),
            u'targetvalue_ptr': ('django.db.models.fields.related.OneToOneField', [], {'to': u"orm['targeting.TargetValue']", 'unique': 'True', 'primary_key': 'True'})
        },
        u'targeting.segmentproximiccontextual': {
            'Meta': {'object_name': 'SegmentProximicContextual'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.SegmentProximicContextual']"})
        },
        u'targeting.segmentproximicmaturityrating': {
            'Meta': {'object_name': 'SegmentProximicMaturityRating'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'description': ('django.db.models.fields.TextField', [], {'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '300'})
        },
        u'targeting.segmentproximicpagelanguage': {
            'Meta': {'object_name': 'SegmentProximicPageLanguage'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.SegmentProximicPageLanguage']"})
        },
        u'targeting.segmentproximicpagenoticeability': {
            'Meta': {'object_name': 'SegmentProximicPageNoticeability'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.SegmentProximicPageNoticeability']"})
        },
        u'targeting.segmentproximicpageplacement': {
            'Meta': {'object_name': 'SegmentProximicPagePlacement'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.SegmentProximicPagePlacement']"})
        },
        u'targeting.segmentproximicpagequality': {
            'Meta': {'object_name': 'SegmentProximicPageQuality'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {'null': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'}),
            'parent': ('mptt.fields.TreeForeignKey', [], {'blank': 'True', 'related_name': "'children'", 'null': 'True', 'to': u"orm['targeting.SegmentProximicPageQuality']"})
        },
        u'targeting.segmentproximicsafetylevel': {
            'Meta': {'object_name': 'SegmentProximicSafetyLevel'},
            'appnexus_id': ('django.db.models.fields.IntegerField', [], {}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'name': ('django.db.models.fields.CharField', [], {'max_length': '300'})
        },
        u'targeting.targetvalue': {
            'Meta': {'ordering': "('id',)", 'unique_together': "[('exchange', 'category', 'value')]", 'object_name': 'TargetValue'},
            'category': ('django.db.models.fields.CharField', [], {'max_length': '200', 'db_index': 'True'}),
            'created': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'exchange': ('django.db.models.fields.related.ForeignKey', [], {'to': u"orm['targeting.Exchange']", 'null': 'True'}),
            u'id': ('django.db.models.fields.AutoField', [], {'primary_key': 'True'}),
            'modified': ('django.db.models.fields.DateTimeField', [], {'default': 'datetime.datetime.now', 'blank': 'True'}),
            'representant': ('django.db.models.fields.related.ForeignKey', [], {'related_name': "'represented'", 'null': 'True', 'on_delete': 'models.SET_NULL', 'to': u"orm['targeting.TargetValue']"}),
            'value': ('django.db.models.fields.CharField', [], {'max_length': '900', 'db_index': 'True'})
        }
    }

    complete_apps = ['targeting']
    symmetrical = True
